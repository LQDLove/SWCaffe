CXX  =mpiicxx
FLAGS=-O2
FLAGS+=-DCPU_ONLY
#FLAGS+=-DMYMPI

BOOST_DIR=/home/export/online1/swyf/swdnn/softs/install
PROTOBUF_DIR=../thirdparty/protobuf_install

INC_FLAGS =-I../thirdparty/glog_install/include
INC_FLAGS += -I../thirdparty/openblas_install/include
INC_FLAGS += -I./include
INC_FLAGS += -I../thirdparty/googletest/include
INC_FLAGS += -I$(BOOST_DIR)
#INC_FLAGS += -I$(PROTOBUF_DIR)/include

LDFLAGS += -L../thirdparty/glog_install/lib/ -lglog
LDFLAGS += -L../thirdparty/openblas_install/lib -lopenblas
#LDFLAGS += -L../thirdparty/protobuf_install/lib -lprotobuf

src=$(wildcard ./src/*.cpp ./src/layers/*.cpp ./src/solvers/*.cpp ./src/util/*.cpp)
OBJ=$(patsubst ./src/%, ./build/%, $(patsubst %.cpp, %.o, $(src)))
TEST_OBJ= $(OBJ) $(patsubst ./src/%, ./build/%, $(patsubst %.cpp, %.o, $(wildcard ./src/test/*.cpp)))
#TEST_OBJ= $(OBJ) 
#					./build/test/test_net.o 
#					./build/test/test_caffe_main.o
#
#./build/test/test_layer_factory.o 

all: mk alexnet_intel

mk:
	mkdir -p ./models/obj ./build/glog ./build/layers/ ./build/solvers/ ./build/test/ ./build/util/
runlenet:
	sh run.sh

alexnet_intel: ./models/obj/alexnet.o $(OBJ)
	$(CXX) $^ $(LDFLAGS)  -o $@
./models/obj/alexnet.o: ./models/src/alexnet.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@

test_tiny_net: ./models/obj/test_tiny_net.o $(OBJ)
	$(CXX) $^ $(LDFLAGS) -o $@
./models/obj/test_tiny_net.o: ./models/src/test_tiny_net.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@

test_solver2: ./models/obj/test_solver2.o $(OBJ)
	$(CXX) $^ $(LDFLAGS)  -o $@
./models/obj/test_solver2.o: ./models/src/test_solver2.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@

test_solver_intel: ./models/obj/test_solver.o $(OBJ)
	$(CXX) $^ $(LDFLAGS)  -o $@
./models/obj/test_solver.o: ./models/src/test_solver.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@

vggnet_intel: ./models/obj/vggnet.o $(OBJ)
	$(CXX) $^ $(LDFLAGS) -o $@
./models/obj/vggnet.o: ./models/src/vggnet.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@

test_lstm: ./models/obj/test_lstm.o $(OBJ)
	$(CXX) $^ $(LDFLAGS)  -o $@ 
./models/obj/test_lstm.o: ./models/src/test_lstm.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@

test: $(TEST_OBJ)
	$(CXX) -pthread $^ ../thirdparty/googletest/libgtest.a $(LDFLAGS) -o $@

./build/test/%.o: ./src/test/%.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@
./build/%.o: ./src/%.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@
./build/layers/%.o: ./src/layers/%.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@
./build/util/%.o: ./src/util/%.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@
./build/solvers/%.o: ./src/solvers/%.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@
./build/glog/%.o: ./src/glog/%.cpp
	$(CXX) -c $^ $(FLAGS) $(INC_FLAGS) -o $@
clean:
	rm -rf $(OBJ) ./models/obj/*.o vggnet test_solver
cleantest:
	rm -rf $(TEST_OBJ)
